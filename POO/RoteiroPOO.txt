Roteiro:
1. Boa tarde, nossa dupla somos eu, Caio Nery e Luca Argolo, e decidimos para esse trabalho criar uma caixa de instrumentos, onde o usuário pode escolher um dos instrumentos de uma lista pré-definida e tocar notas de sua preferência.

2. Para criar nosso programa, nós primeiro criamos uma classe instrumento que é uma classe abstrata, que possui um nome, um tipo e um método para tocar uma nota.
A partir dela através da herança criamos duas classes abstratas que são instrumento de corda e instrumento de sopro, e novamente por herança criamos os instrumentos disponiveis para nossa aplicação, que possuem um arraylist de notas que serão reproduzidas. 
Na versão atual do programa, esses instrumentos são violão, violino, saxofone e flauta.

3. Para a criação da nossa aplicação utilizamos o Swing, para gerar nossa interface (Luca abre o programa), fazendo sobreposição dos métodos das classes disponíveis da biblioteca, dessa forma temos uma janela principal onde é possível escolher qual instrumento deseja tocar ao clicar em um dos botões e ao fazermos isso, acionamos uma ação que irá abrir uma nova janela.
Com essa nova janela aberta, nós preenchemos ela com botões que serão as notas do instrumento, notas essas vindas de uma lista, dessa forma cada botão irá acionar uma ação para tocar o som associado com aquela nota. E Luca irá mostrar como o som é reproduzido (explicar como funciona o código para o som ).



  E para ocorrer essa reprodução de som, utilizamos o JavaX(?), onde cada botão de nota reproduz seu respectivo som.



Obs:

Sobrecarga: Usamos sobrecarga na classe Instrumento, onde o método tocar a nota, caso não seja passada nenhuma nota como parametro, ele irá tocar a primeira nota.

Sobreposição: Utilizamos sobreposição nos métodos das classes das bibliotecas Swing e JavaX. Por exemplo no método play que irá reproduzir um som.

Composição: Utilizamos composição, por exemplo na classe instrumento, um dos atributos dessa classe é um objeto da classe Tipo. (composição fraca - cadastra um objeto criado e composição forte)

Herança: Utilizamos herança nas classes dos intrumentos, onde o instrumento de corda e de sopro são extensões de instrumento, e os instrumentos flauta, violão, entre outros, por sua vez são extensões das classes instrumento de corda ou instrumento de sopro.

Ligação Dinâmica: Trabalhamos com ligação dinâmica, por exemplo quando nossa classe InstrumentoFrame, responsável por criar os botões com as notas, chama o método de tocar de um objeto instrumento (que não é especificado como instrumento de sopro ou instrumento de corda, muito menos como saxofone, violino, etc), pois nessa classe seu único atributo é um objeto da classe instrumento. / Trabalhamos com ligação dinâmica, por exemplo quando nossa classe CaixaDeMusica possui como atributos objetos da classe instrumentos, mas que são instâncias com o new com as classes de violino, flauta, violão, etc. (dessa forma a classe instrumento vai ser o tipo de referência e os saxofone, flauta, etc vão ser os tipos efetivos dos objetos referenciados)

Polimorfismo: Utilizamos polimorfismo, pois nossa classe CaixaDeInstrumentos enxerga apenas o objeto instrumento, ou seja ele não enxerga ou não sabe da existência do instrumento de sopro ou instrumento de corda, muito menos dos instrumentos em especificos, ele trabalha apenas com a classe instrumento.
A gente usou polimorfismo nos intrumentos, onde a função de getpath retorna valores diferentes a depender da classe do instrumento.

Campos estáticos: Utilizamos campos estáticos por exemplo nos atributos estáticos da classe CaixaDeInstrumento, onde temos atributos estáticos para cada tipo de instrumento.

Método estáticos: Temos o método getInstrumetoData em instrumento, que recebe um objeto instrumento e dai usamos o instaceof para testar qual instrumento é, caso não seja nenhum dos instrumentos ele trata a exceção, imprimindo a mensagem de que o instrumento não foi encontrando.

Cast: Não utilizamos cast no trabalho por não achar necessário para o projeto em questão.

Classes abstratas: Temos 3 classes abstratas no trabalho, Instrumento, InstrumentoDeSopro e InstrumetoDeCorda.

Interface: Utilizamos interface para receber as notas e os nomes delas para cada instrumento.

Tratamentos de exceção: Utilizamos tratamento de exceção ao usar ao utilizar o método que muda o tema da nossa aplicação. (ClassNotFoundException - se a classe LookAndFeel não for achada / InstantiationException - se uma nova instância da classe não puder ser criada / IllegalAcessException - se a classe ou o iniciador não for acessível / UnsupportedLookAndFeelException - se não for suportado) 
No método play no instrumento, ele imprime o erro.
Temos uma exceção no método getInstrumentData que recebe um objeto instrumeto e através do instaceof ele testa qual instrumento é para poder imprimir sua informação, caso não ache um instrumento, ele imprime o erro falando não foi encontrado o instrumento.

Pacotes: Usamos pacotes para organizar nosso projeto.
